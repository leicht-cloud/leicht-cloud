syntax = "proto3";

package plugin;

// Interface exported by the server.
service StorageProvider {
  rpc InitUser(User) returns (Error) {}
  
  rpc MkDir(MkdirQuery) returns (Error) {}

  rpc Move(MoveQuery) returns (Error) {}

  rpc ListDirectory(ListDirectoryQuery) returns (ListDirectoryInfoReply) {}

  rpc OpenFile(OpenFileQuery) returns (OpenFileReply) {}

  rpc CloseFile(CloseFileQuery) returns (Error) {}

  rpc WriteFile(stream WriteFileQuery) returns (Error) {}

  rpc ReadFile(ReadFileQuery) returns (stream ReadFileReply) {}

  rpc Delete(DeleteQuery) returns (Error) {}
}

// This basically maps to the FileInfo struct
message FileInfo {
    string name = 1;
    string fullPath = 2;
    string mimeType = 3;
    uint64 createdAt = 4;
    uint64 updatedAt = 5;
    uint64 size = 6;
};

// This maps to the DirectoryInfo struct
message ListDirectoryInfoReply {
    Error error = 1;
    string path = 2;
    repeated FileInfo files = 3;
};

// This sort of maps to the User struct, although we only give the id as that should be the only relevant thing.
message User {
    uint64 id = 1;
};

message Error {
    string message = 1;
};

message MkdirQuery {
    User user = 1;
    string path = 2;
};

message MoveQuery {
    User user = 1;
    string src = 2;
    string dst = 3;
};

message ListDirectoryQuery {
    User user = 1;
    string path = 2;
};

message OpenFileQuery {
    User user = 1;
    string fullPath = 2;
};

message OpenFileReply {
    uint64 id = 1;
    Error error = 2;
};

message CloseFileQuery {
    uint64 id = 1;
};

message WriteFileQuery {
    uint64 id = 1;
    bytes data = 2;
};

message ReadFileQuery {
    uint64 id = 1;
};

message ReadFileReply {
    bytes data = 1;
    Error error = 2;
};

message DeleteQuery {
    User user = 1;
    string fullPath = 2;
};