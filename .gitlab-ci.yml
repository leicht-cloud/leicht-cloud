stages:
  - test

.setup-build-env: &setup-build-env
  - apt-get update && apt-get install -y protobuf-compiler libmagic-dev
  - go mod download
  - go install github.com/golang/protobuf/proto
  - go install github.com/golang/protobuf/protoc-gen-go
  - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
  - go generate ./...

test:
  stage: test
  image: golang:${GOLANG_VERSION}
  parallel:
    matrix:
      - GOLANG_VERSION: ["1.17", "1.18"]
  before_script:
    - *setup-build-env
    - go install github.com/boumenot/gocover-cobertura@latest
    - go install gotest.tools/gotestsum@latest
  script:
    - gotestsum --format testname --junitfile report.xml -- -coverprofile=coverage.txt -race ./...
    - gocover-cobertura < coverage.txt > coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml

golangci-linter:
  stage: test
  image: golangci/golangci-lint:latest
  allow_failure: true
  before_script:
    - *setup-build-env
  script:
    - golangci-lint run -v --timeout 1h

build:
  stage: test
  image: golang:latest
  before_script:
    - *setup-build-env
  script:
    - find cmd -type d -mindepth 1 -maxdepth 1 | xargs -i go build ./{}/...
  artifacts:
    untracked: true

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
